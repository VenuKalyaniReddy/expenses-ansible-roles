- name: diasbling  nodejs
  ansible.builtin.command: dnf module disable nodejs -y

- name: enabling nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.command: dnf install nodejs -y

- name: user add
  ansible.builtin.user: 
    name: expense
    state: present

- name: create app directory
  ansible.builtin.file:
    name: app
    state: directory

- name: downloading the backend application url
  ansible.builtin.import_role: 
    name: common
    tasks_from: appsetup

- name: unzipping the application
  ansible.builtin.import_role:
    name: common
    tasks_from: appsetup

- name: install dependencies
  ansible.builtin.command: npm install
  args:
    chdir: app

- name: copy backend service 
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

# - name: Deploy backend service file
#   template:
#     src: backend.service.j2
#     dest: /etc/systemd/system/backend.service    
  
# - name: deamon-reload
#   ansible.builtin.systemd_service:
#     daemon_reload: true

- name: daemon-reload
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: mysql installation
  ansible.builtin.import_role:
    name: common
    tasks_from: mysqlsetup

- name: seting root password 
  ansible.builtin.command: mysql_secure_installation --set-root-pass {{ sql_password }}

- name: restart backend
  ansible.builtin.service:
    name: backend
    state: started 
    enabled: yes

    



